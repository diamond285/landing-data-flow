{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e7a9a8a6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createTextVNode(\"Часто \"), /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"#5BBA6A\"\n  }\n}, \"задаваемые\"), /*#__PURE__*/_createTextVNode(\" вопросы\")], -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"indicator opened\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  width: \"12\",\n  height: \"7\",\n  viewBox: \"0 0 12 7\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M6.53033 0.46967C6.23744 0.176777 5.76256 0.176777 5.46967 0.46967L0.696699 5.24264C0.403806 5.53553 0.403806 6.01041 0.696699 6.3033C0.989593 6.59619 1.46447 6.59619 1.75736 6.3033L6 2.06066L10.2426 6.3033C10.5355 6.59619 11.0104 6.59619 11.3033 6.3033C11.5962 6.01041 11.5962 5.53553 11.3033 5.24264L6.53033 0.46967ZM6.75 2V1H5.25V2H6.75Z\"\n})], -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"indicator\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  width: \"12\",\n  height: \"7\",\n  viewBox: \"0 0 12 7\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M5.46967 6.53033C5.76256 6.82322 6.23744 6.82322 6.53033 6.53033L11.3033 1.75736C11.5962 1.46447 11.5962 0.989593 11.3033 0.696699C11.0104 0.403806 10.5355 0.403806 10.2426 0.696699L6 4.93934L1.75736 0.696699C1.46447 0.403806 0.989593 0.403806 0.696699 0.696699C0.403806 0.989592 0.403806 1.46447 0.696699 1.75736L5.46967 6.53033ZM5.25 5L5.25 6L6.75 6L6.75 5L5.25 5Z\"\n})], -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, question => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass({\n        'white-container': $props.isWhite,\n        'question-container': !$props.isWhite\n      }),\n      key: question,\n      onClick: $event => $options.open(question)\n    }, [_createElementVNode(\"p\", {\n      class: \"title\",\n      style: _normalizeStyle([question.isOpen ? {\n        'color': '#5BBA6A'\n      } : {\n        'color': 'black'\n      }])\n    }, _toDisplayString(question.title), 5 /* TEXT, STYLE */), _createElementVNode(\"p\", {\n      class: \"content-text\",\n      style: _normalizeStyle([question.isOpen ? {\n        'display': 'block'\n      } : {\n        'display': 'none'\n      }])\n    }, _toDisplayString(question.content), 5 /* TEXT, STYLE */), question.isOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9))], 10 /* CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAS;gEAClBC,oBAAkF;EAA/ED,KAAK,EAAC;AAAQ,kCAAC,QAAM,oCAA8C;EAAxCE,KAAsB,EAAtB;IAAA;EAAA;AAAsB,GAAC,YAAU,iCAAO,UAAQ;;;;EAIhDF,KAAK,EAAC;;gEAChCC,oBAEM;EAFDE,KAAK,EAAC,IAAI;EAACC,MAAM,EAAC,GAAG;EAACC,OAAO,EAAC;iBACjCJ,oBAAgW;EAA1VK,CAAC,EAAC;AAAsV;oBADhWC,UAEM;;;EAEIP,KAAK,EAAC;;gEAChBC,oBAEM;EAFDE,KAAK,EAAC,IAAI;EAACC,MAAM,EAAC,GAAG;EAACC,OAAO,EAAC;iBACjCJ,oBAA0X;EAApXK,CAAC,EAAC;AAAgX;oBAD1XE,UAEM;;uBAbZC,oBAgBM,OAhBNC,UAgBM,GAfJC,UAAkF,qBAClFF,oBAaMG,6BAbwFC,eAAS,EAArBC,QAAQ;yBAA1FL,oBAaM;MAbAT,KAAK;QAAA,mBAAsBe,cAAO;QAAA,uBAAyBA;MAAO;MAAkCC,GAAG,EAAEF,QAAQ;MAAGG,OAAK,YAAEC,aAAI,CAACJ,QAAQ;QAC5Ib,oBAA8G;MAA3GD,KAAK,EAAC,OAAO;MAAEE,KAAK,mBAAGY,QAAQ,CAACK,MAAM;QAAA;MAAA;QAAA;MAAA;wBAAiDL,QAAQ,CAACM,KAAK,yBACxGnB,oBAAwH;MAArHD,KAAK,EAAC,cAAc;MAAEE,KAAK,mBAAGY,QAAQ,CAACK,MAAM;QAAA;MAAA;QAAA;MAAA;wBAAkDL,QAAQ,CAACO,OAAO,yBACvGP,QAAQ,CAACK,MAAM,kBAA1BV,oBAIM,OAJNa,UAIM,gCACNb,oBAIM,OAJNc,UAIM","names":["class","_createElementVNode","style","width","height","viewBox","d","_hoisted_5","_hoisted_8","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","$data","question","$props","key","onClick","$options","isOpen","title","content","_hoisted_4","_hoisted_7"],"sourceRoot":"","sources":["/Users/baur/WebstormProjects/docs-flow-front/src/components/home/questions.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <p class=\"header\">Часто <span style=\"color: #5BBA6A\">задаваемые</span> вопросы</p>\n    <div :class=\"{'white-container': isWhite, 'question-container': !isWhite}\" v-for=\"question in questions\" :key=\"question\" @click=\"open(question)\">\n      <p class=\"title\" :style=\"[question.isOpen ? {'color': '#5BBA6A'} : {'color': 'black'}]\">{{question.title}}</p>\n      <p class=\"content-text\" :style=\"[question.isOpen ? {'display': 'block'} : {'display': 'none'}]\">{{question.content}}</p>\n      <div v-if=\"question.isOpen\" class=\"indicator opened\">\n        <svg width=\"12\" height=\"7\" viewBox=\"0 0 12 7\">\n          <path d=\"M6.53033 0.46967C6.23744 0.176777 5.76256 0.176777 5.46967 0.46967L0.696699 5.24264C0.403806 5.53553 0.403806 6.01041 0.696699 6.3033C0.989593 6.59619 1.46447 6.59619 1.75736 6.3033L6 2.06066L10.2426 6.3033C10.5355 6.59619 11.0104 6.59619 11.3033 6.3033C11.5962 6.01041 11.5962 5.53553 11.3033 5.24264L6.53033 0.46967ZM6.75 2V1H5.25V2H6.75Z\"/>\n        </svg>\n      </div>\n      <div v-else class=\"indicator\">\n        <svg width=\"12\" height=\"7\" viewBox=\"0 0 12 7\">\n          <path d=\"M5.46967 6.53033C5.76256 6.82322 6.23744 6.82322 6.53033 6.53033L11.3033 1.75736C11.5962 1.46447 11.5962 0.989593 11.3033 0.696699C11.0104 0.403806 10.5355 0.403806 10.2426 0.696699L6 4.93934L1.75736 0.696699C1.46447 0.403806 0.989593 0.403806 0.696699 0.696699C0.403806 0.989592 0.403806 1.46447 0.696699 1.75736L5.46967 6.53033ZM5.25 5L5.25 6L6.75 6L6.75 5L5.25 5Z\"/>\n        </svg>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"questions-component\",\n  props: {\n    isWhite: Boolean,\n    questionProps: []\n  },\n  data() {\n    return {\n      questions: [\n        {\n          title: \"Что такое Docs.flow?\",\n          content: \"Вы оставляете заявку на нашем сайте, через некоторое время получаете практически логин и пароль от админки к своему аккаунту. Эта панель будет личной страницей вашей компании, где вы сможете добавлять и удалять своих сотрудников, а так же вы сможете увидеть все документы которые будут в ороте внутри вашей компании\",\n          isOpen: false\n        },\n        {\n          title: \"Как работает  Docs.flow?\",\n          content: \"Вы оставляете заявку на нашем сайте, через некоторое время получаете практически логин и пароль от админки к своему аккаунту. Эта панель будет личной страницей вашей компании, где вы сможете добавлять и удалять своих сотрудников, а так же вы сможете увидеть все документы которые будут в ороте внутри вашей компании\",\n          isOpen: false\n        },\n        {\n          title: \"Все данные конфиденциальны?\",\n          content: \"Вы оставляете заявку на нашем сайте, через некоторое время получаете практически логин и пароль от админки к своему аккаунту. Эта панель будет личной страницей вашей компании, где вы сможете добавлять и удалять своих сотрудников, а так же вы сможете увидеть все документы которые будут в ороте внутри вашей компании\",\n          isOpen: false\n        },\n      ]\n    }\n  },\n  mounted() {\n    // if (this.questionProps === null) {\n    //   this.questions = []\n    // } else if (this.questionProps.length !== 0) {\n    //   this.questions = this.questionProps\n    // }\n  },\n  methods: {\n    open(question) {\n      question.isOpen = !question.isOpen\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content {\n  width: 100%;\n  margin-top: 100px;\n}\n.header {\n  color: black;\n  text-align: center;\n  margin-bottom: 24px;\n  font-size: 35px;\n  font-family: Stolzl-medium, system-ui;\n}\n.question-container {\n  text-align: start;\n  margin-top: 20px;\n  border-radius: 20px;\n  position: relative;\n  cursor: pointer;\n  border: 1px solid rgba(0, 0, 0, 0.09);\n  padding: 25px 54px 25px 70px;\n}\n.white-container {\n  text-align: start;\n  margin-top: 20px;\n  border-radius: 20px;\n  position: relative;\n  cursor: pointer;\n  background: white;\n  border: 1px solid white;\n  padding: 25px 54px 25px 70px;\n}\n.title {\n  text-align: start;\n  transition: 0.3s;\n  display: inline-block;\n  vertical-align: middle;\n  color: black;\n  font-family: Stolzl-regular, system-ui;\n  font-size: 20px;\n}\n.indicator {\n  position: absolute;\n  right: 60px;\n  display: inline-block;\n  background: white;\n  width: 40px;\n  top: 16px;\n  height: 40px;\n  cursor: pointer;\n  border-radius: 500px;\n  transition: 0.3s;\n  border: 1px solid rgba(0, 0, 0, 0.14);\n}\n.indicator svg {\n  width: 14px;\n  height: 14px;\n  padding: 12px;\n  margin-left: 1px;\n  transition: 0.3s;\n  fill: rgba(0, 0, 0, 0.14);\n}\n.indicator:hover {\n  border-color: #5BBA6A;\n}\n.indicator:hover svg {\n  fill: #5BBA6A;\n}\n.opened {\n  border-color: #5BBA6A;\n}\n.opened svg {\n  fill: #5BBA6A;\n}\n.content-text {\n  margin-top: 24px;\n  display: none;\n  transition: 0.3s;\n  line-height: 21px;\n  color: rgba(0, 0, 0, 0.58);\n  font-size: 16px;\n  font-family: Rubik-regular, system-ui;\n}\n\n@media screen and (max-width: 950px) {\n  .header {\n    font-size: 24px;\n    line-height: 28px;\n  }\n  .title {\n    font-size: 16px;\n    line-height: 19px;\n  }\n  .question-container, .white-container {\n    padding: 21px 0 21px 32px;\n  }\n  .indicator {\n    width: 30px;\n    height: 30px;\n    right: 30px;\n  }\n  .indicator svg {\n    width: 14px;\n    height: 14px;\n    padding: 8px;\n  }\n  .question-container {\n    width: auto;\n    margin-left: 24px;\n    margin-right: 24px;\n  }\n}\n@media screen and (max-width: 900px){\n  .question-container {\n    background: white;\n    border: none;\n  }\n  .header {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    width: 70%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}